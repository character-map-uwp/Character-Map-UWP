<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CharacterMap.Controls"
    xmlns:core="using:CharacterMap.Core"
    xmlns:h="using:CharacterMap.Helpers"
    xmlns:models="using:CharacterMap.Models"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:win2d="using:Microsoft.Graphics.Canvas.UI.Xaml">

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
            <SolidColorBrush x:Key="SystemControlSplitterPointerOver" Color="{ThemeResource SystemBaseLowColor}" />
            <SolidColorBrush x:Key="SystemControlSplitterPressed" Color="{ThemeResource SystemBaseHighColor}" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="HighContrast">
            <SolidColorBrush x:Key="SystemControlSplitterPointerOver" Color="{ThemeResource SystemColorHighlightColor}" />
            <SolidColorBrush x:Key="SystemControlSplitterPressed" Color="{ThemeResource SystemColorHighlightColor}" />
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <Style TargetType="controls:XamlTitleBar">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{ThemeResource AppBarItemForegroundThemeBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:XamlTitleBar">
                    <Grid BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="ActiveState" />
                                <VisualState x:Name="InactiveState">
                                    <VisualState.Setters>
                                        <Setter Target="BackgroundElement.IsHitTestVisible" Value="False" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="BackgroundElement" Fill="{TemplateBinding Background}" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.LeftColumnWidth}" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.RightColumnWidth}" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter
                                Grid.Column="1"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                ContentTransitions="{TemplateBinding ContentTransitions}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:DirectTextBlock">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:DirectTextBlock">
                    <win2d:CanvasControl
                        x:Name="TextCanvas"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch" />
                    <!--<Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:MenuFlyoutContentHost">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:MenuFlyoutContentHost">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="toolkit:GridSplitter">
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="IsFocusEngagementEnabled" Value="True" />
        <Setter Property="MinWidth" Value="12" />
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="BorderBrush" Value="{ThemeResource AppBarButtonRevealBorderBrush}" />
        <Setter Property="BorderThickness" Value="1 0" />
        <Setter Property="Background" Value="{ThemeResource SystemControlHighlightChromeHighBrush}" />
        <Setter Property="GripperForeground" Value="{ThemeResource SystemControlForegroundAltHighBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:GridSplitter">
                    <Grid
                        x:Name="RootGrid"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="GridSplitterStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource SystemControlSplitterPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource SystemControlSplitterPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            Content="{TemplateBinding Element}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="toolkit:InAppNotification">
        <Setter Property="Background" Value="{ThemeResource SystemAccentColorDark1}" />
        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundBaseLowBrush}" />
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="55" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}" />
        <Setter Property="RenderTransformOrigin" Value="0.5,1" />
        <Setter Property="Padding" Value="24,12" />
        <Setter Property="MaxWidth" Value="960" />
        <Setter Property="MinWidth" Value="132" />
        <Setter Property="AnimationDuration" Value="0:0:0.100" />
        <Setter Property="HorizontalOffset" Value="0" />
        <Setter Property="AutomationProperties.LandmarkType" Value="Custom" />
        <Setter Property="AutomationProperties.LocalizedLandmarkType" Value="Notification" />
        <Setter Property="AutomationProperties.LiveSetting" Value="Assertive" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="VerticalOffset" Value="40" />
        <Setter Property="Margin" Value="24 24" />
        <Setter Property="RequestedTheme" Value="Dark" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:InAppNotification">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="State">
                                <VisualState x:Name="Collapsed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Visible">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Opacity" Value="1" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="*" To="Collapsed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <SplineDoubleKeyFrame KeySpline="0.7, 0, 1, 0.5" KeyTime="0:0:0.225" Value="{Binding HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </DoubleAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <SplineDoubleKeyFrame KeySpline="0.7, 0, 1, 0.5" KeyTime="0:0:0.225" Value="{Binding VerticalOffset, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </DoubleAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.15" Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="*" To="Visible">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <SplineDoubleKeyFrame KeySpline="0.1, 0.9, 0.2, 1" KeyTime="0:0:0.3" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="{Binding HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}}" />
                                                <SplineDoubleKeyFrame KeySpline="0.1, 0.9, 0.2, 1" KeyTime="0:0:0.5" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="{Binding VerticalOffset, RelativeSource={RelativeSource TemplatedParent}}" />
                                                <SplineDoubleKeyFrame KeySpline="0.1, 0.9, 0.2, 1" KeyTime="0:0:0.5" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid
                            x:Name="RootGrid"
                            MinHeight="{TemplateBinding MinHeight}"
                            MaxWidth="{TemplateBinding MaxWidth}"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8"
                            RenderTransformOrigin="{TemplateBinding RenderTransformOrigin}"
                            Visibility="{TemplateBinding Visibility}">

                            <Grid.RenderTransform>
                                <CompositeTransform />
                            </Grid.RenderTransform>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter
                                x:Name="PART_Presenter"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Center"
                                TextWrapping="WrapWholeWords" />

                            <controls:UXButton
                                x:Name="PART_DismissButton"
                                Grid.Column="1"
                                Width="40"
                                Height="40"
                                MinWidth="40"
                                MinHeight="40"
                                MaxHeight="40"
                                VerticalAlignment="Center"
                                AutomationProperties.Name="Dismiss"
                                CornerRadius="8"
                                Foreground="White"
                                Style="{StaticResource MapInfoButtonStyle}">
                                <Button.RenderTransform>
                                    <TranslateTransform x:Name="DismissButtonTransform" X="18" />
                                </Button.RenderTransform>
                                <FontIcon
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="White"
                                    Glyph="&#xE711;" />
                            </controls:UXButton>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:LabelButton">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{ThemeResource AppBarButtonRevealBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:LabelButton">
                    <Border
                        x:Name="Root"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Border.(Grid.ColumnSpan)" Value="2" />
                                        <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                        <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonRevealBackgroundPointerOver}" />
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="ContentContainer" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="Border.(Grid.ColumnSpan)" Value="2" />
                                        <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                        <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonRevealBackgroundPressed}" />
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <PointerDownThemeAnimation Storyboard.TargetName="ContentContainer" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="ContentContainer" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="10" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Border
                                x:Name="Border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                            <ContentPresenter Content="{TemplateBinding IconContent}" />

                            <ContentPresenter
                                Grid.Column="1"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="controls:ModalPagePresenter">
        <Setter Property="ContentBackground" Value="{ThemeResource DefaultPageBackgroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}" />
        <Setter Property="TitleBackgroundBrush" Value="{ThemeResource DefaultHostBrush}" />
        <Setter Property="TitleBarHeight" Value="32" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="CloseGlyph" Value="{core:ThemeIconGlyph Icon=ViewClose}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ModalPagePresenter">
                    <Grid
                        x:Name="Root"
                        Background="{TemplateBinding Background}"
                        BackgroundTransition="{StaticResource RootBackgroundTransition}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="{Binding TitleBarHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Border
                            x:Name="TitleBackground"
                            Grid.RowSpan="2"
                            MinHeight="32"
                            Margin="0 0 0 -10"
                            Background="{TemplateBinding TitleBackgroundBrush}"
                            BackgroundTransition="{StaticResource RootBackgroundTransition}" />

                        <ContentPresenter
                            x:Name="TitleBarPresenter"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">
                            <Border />
                        </ContentPresenter>

                        <Grid
                            x:Name="HeaderGrid"
                            Grid.Row="1"
                            Height="{StaticResource TitleRowHeight}"
                            core:Properties.GridDefinitions="c* cAuto">

                            <TextBlock
                                x:Name="TitleHeader"
                                Margin="20 0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                IsHitTestVisible="False"
                                Style="{StaticResource TitleTextStyle}"
                                Text="{Binding Path=Title, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource TitleConverter}}" />

                            <controls:UXButton
                                x:Name="BtnClose"
                                x:Uid="BtnClose"
                                Grid.Column="1"
                                Width="45"
                                Height="45"
                                HorizontalAlignment="Right"
                                h:FluentAnimation.PointerDownScale="0.8"
                                h:FluentAnimation.PointerOver="FluentContentPresenter"
                                h:FluentAnimation.PointerOverOffset="-2"
                                h:FluentAnimation.UsePointerOver="True"
                                Style="{StaticResource DefaultThemeAppBarButtonStyle}"
                                Visibility="{TemplateBinding CloseButtonVisibility}">
                                <FontIcon Glyph="{TemplateBinding CloseGlyph}" Style="{StaticResource ThemeFontIconStyle}" />
                                <Button.KeyboardAccelerators>
                                    <KeyboardAccelerator Key="Escape" Modifiers="None" />
                                </Button.KeyboardAccelerators>
                            </controls:UXButton>

                        </Grid>

                        <Grid x:Name="ContentRoot" Grid.Row="2">
                            <Border
                                x:Name="BackgroundBorder"
                                Margin="0 0 0 -8"
                                h:CompositionFactory.CornerRadius="8.0"
                                Background="{TemplateBinding ContentBackground}"
                                BackgroundTransition="{StaticResource RootBackgroundTransition}">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </Border>
                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CloseStates">
                                <VisualState x:Name="RightAligned" />
                                <VisualState x:Name="LeftAligned">
                                    <VisualState.Setters>
                                        <Setter Target="BtnClose.Margin" Value="4 0 0 0" />
                                        <Setter Target="BtnClose.(Grid.Column)" Value="0" />
                                        <Setter Target="TitleHeader.(Grid.Column)" Value="1" />
                                        <Setter Target="HeaderGrid.(core:Properties.GridDefinitions)" Value="cAuto c* cs0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:ContentGroup">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ContentGroup">
                    <StackPanel
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                            Content="{TemplateBinding Text}"
                            FontSize="24"
                            FontWeight="Light"
                            OpticalMarginAlignment="TrimSideBearings" />
                        <ItemsPresenter />
                        <Border Style="{StaticResource SpacerStyle}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:ButtonGroup">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="CornerRadius" Value="{StaticResource CardCornerRadius}" />
        <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ButtonGroup">
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:CategoryFlyout">
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:CategoryFlyout">
                    <Grid Margin="0 12">
                        <Grid.Resources>
                            <Style x:Key="HeaderStyle" TargetType="TextBlock">
                                <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings" />
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="Margin" Value="0 20 0 4" />
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <StackPanel>
                            <TextBlock
                                x:Uid="UnicodeFiltersTitle"
                                Margin="12 12 0 6"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontWeight="Bold"
                                Opacity="0.5" />

                            <Grid>
                                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                                    <AppBarButton
                                        Name="AppBtnSelectAll"
                                        x:Uid="AppBtnSelectAll"
                                        Style="{StaticResource LabelAppBarButtonStyle}">
                                        <AppBarButton.Icon>
                                            <FontIcon core:Properties.ThemeIcon="SelectAll" />
                                        </AppBarButton.Icon>
                                    </AppBarButton>
                                    <AppBarButton
                                        Name="AppBtnClear"
                                        x:Uid="AppBtnClear"
                                        Style="{StaticResource LabelAppBarButtonStyle}">
                                        <AppBarButton.Icon>
                                            <FontIcon core:Properties.ThemeIcon="ClearSelection" />
                                        </AppBarButton.Icon>
                                    </AppBarButton>
                                </StackPanel>
                                <AppBarButton
                                    Name="AppBtnReset"
                                    x:Uid="AppBtnReset"
                                    HorizontalAlignment="Right"
                                    Style="{StaticResource LabelAppBarButtonStyle}">
                                    <AppBarButton.Icon>
                                        <FontIcon core:Properties.ThemeIcon="Reset" />
                                    </AppBarButton.Icon>
                                </AppBarButton>
                            </Grid>
                        </StackPanel>

                        <GridView
                            x:Name="CategoryList"
                            Grid.Row="1"
                            Width="440"
                            MaxHeight="500"
                            Padding="12 12 0 48"
                            ItemContainerTransitions="{StaticResource NoTransitions}"
                            SelectionMode="None"
                            ShowsScrollingPlaceholders="False">
                            <GridView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <ItemsWrapGrid CacheLength="0" Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </GridView.ItemsPanel>
                            <GridView.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox
                                        Width="200"
                                        Content="{Binding Range.Name, Mode=OneTime}"
                                        IsChecked="{Binding IsSelected, Mode=TwoWay}"
                                        Style="{StaticResource DefaultThemeCheckBoxStyle}" />
                                </DataTemplate>
                            </GridView.ItemTemplate>
                        </GridView>

                        <Button
                            Name="BtnApply"
                            x:Uid="BtnApply"
                            Grid.Row="2"
                            Width="200"
                            Margin="12 12 12 0"
                            HorizontalAlignment="Right"
                            Style="{StaticResource DefaultThemeButtonStyle}" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:ExtendedSplitView">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="OpenPaneLength" Value="{ThemeResource SplitViewOpenPaneThemeLength}" />
        <Setter Property="CompactPaneLength" Value="{ThemeResource SplitViewCompactPaneThemeLength}" />
        <Setter Property="PaneBackground" Value="{ThemeResource SystemControlPageBackgroundChromeLowBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="SplitView">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisplayModeStates">
                                <VisualState x:Name="Closed" />
                                <VisualState x:Name="OpenOverlayLeft">
                                    <VisualState.Setters>
                                        <Setter Target="PaneRoot.(Grid.ColumnSpan)" Value="2" />
                                        <Setter Target="PaneRoot.Visibility" Value="Visible" />
                                        <Setter Target="LightDismissLayer.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OpenInlineLeft">
                                    <VisualState.Setters>
                                        <Setter Target="PaneRoot.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!--  Content Area  -->
                        <Grid x:Name="ContentRoot" Grid.Column="1">
                            <Border Child="{TemplateBinding Content}" />
                            <Rectangle
                                x:Name="LightDismissLayer"
                                x:DeferLoadStrategy="Lazy"
                                Fill="Transparent"
                                Visibility="Collapsed" />
                        </Grid>

                        <!--  Pane Content Area  -->
                        <Border
                            x:Name="PaneRoot"
                            Width="{TemplateBinding OpenPaneLength}"
                            HorizontalAlignment="Left"
                            Background="{TemplateBinding PaneBackground}"
                            Child="{TemplateBinding Pane}"
                            Visibility="Collapsed" />
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:CharacterPickerButton">
        <Setter Property="BorderThickness" Value="0 1 1 1" />
        <Setter Property="CornerRadius" Value="0 4 4 0" />
        <Setter Property="Height" Value="32" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Foreground" Value="{ThemeResource ComboBoxDropDownGlyphForeground}" />
        <Setter Property="Content" Value="{core:ThemeIconElement Icon=Add}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:CharacterPickerButton">
                    <Button
                        x:Name="RootButton"
                        x:Uid="CharacterPickerButton"
                        Height="{TemplateBinding Height}"
                        VerticalAlignment="Stretch"
                        Background="{Binding Target.Background, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                        BorderBrush="{Binding Target.BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Content="{TemplateBinding Content}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        FontSize="{TemplateBinding FontSize}"
                        Foreground="{TemplateBinding Foreground}"
                        Style="{StaticResource SmolButton}">
                        <Button.Resources>
                            <Style x:Key="PickerFlyoutStyle" BasedOn="{StaticResource ThemeFlyoutStyle}" TargetType="FlyoutPresenter">
                                <Setter Property="IsDefaultShadowEnabled" Value="True" />
                            </Style>
                            <Style x:Key="PickerFlyoutRightStyle" BasedOn="{StaticResource ThemeFlyoutStyle}" TargetType="FlyoutPresenter">
                                <Setter Property="RenderTransformOrigin" Value="0.95 0" />
                                <Setter Property="IsDefaultShadowEnabled" Value="True" />
                                <Setter Property="Margin" Value="0 0 0 0" />
                            </Style>
                        </Button.Resources>
                        <Button.Flyout>
                            <Flyout
                                x:Name="Flyout"
                                core:Properties.UseExpandContractAnimation="True"
                                FlyoutPresenterStyle="{StaticResource PickerFlyoutStyle}"
                                Placement="{Binding Placement, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                ShouldConstrainToRootBounds="True" />
                        </Button.Flyout>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PickerPlacementState">
                                <VisualState x:Name="DefaultPlacementState" />
                                <VisualState x:Name="RightPlacementState">
                                    <VisualState.Setters>
                                        <Setter Target="Flyout.FlyoutPresenterStyle" Value="{StaticResource PickerFlyoutRightStyle}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:SuggestionBox">
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="{ThemeResource ComboBoxBorderThemeBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:SuggestionBox">
                    <Grid
                        x:Name="Root"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <AutoSuggestBox
                            x:Name="SuggestionBox"
                            MinHeight="0"
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            BorderThickness="0"
                            CornerRadius="4 0 0 4"
                            ManipulationMode="TranslateInertia, TranslateY"
                            PlaceholderText="{TemplateBinding PlaceholderText}"
                            Style="{StaticResource DefaultThemeAutoSuggestBoxStyle}"
                            Text="{Binding Text, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                            TextMemberPath="Text">
                            <AutoSuggestBox.Resources>
                                <Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="ListViewItem">
                                    <Setter Property="Margin" Value="0 0 0 6" />
                                    <Setter Property="Padding" Value="18 8 16 12" />
                                </Style>
                            </AutoSuggestBox.Resources>
                            <AutoSuggestBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Name="TemplateContent">
                                        <TextBlock
                                            core:Properties.Uppercase="{Binding Title}"
                                            FontSize="10.666"
                                            FontWeight="SemiBold"
                                            Opacity="0.6" />
                                        <TextBlock
                                            FlowDirection="{Binding FlowDirection}"
                                            MaxLines="2"
                                            Text="{Binding Text}"
                                            TextTrimming="CharacterEllipsis"
                                            TextWrapping="Wrap" />
                                    </StackPanel>
                                </DataTemplate>
                            </AutoSuggestBox.ItemTemplate>
                            <core:Properties.Footer>
                                <controls:ExtendedListViewItem
                                    x:Name="EditButton"
                                    h:FluentAnimation.PointerDownScale="0.92"
                                    h:FluentAnimation.PointerOver="Target"
                                    h:FluentAnimation.PointerOverAxis="Vertical"
                                    h:FluentAnimation.PointerOverOffset="-2"
                                    h:FluentAnimation.Pressed="Target"
                                    Style="{StaticResource DefaultThemeListViewItemStyle}">
                                    <StackPanel
                                        Name="Target"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Orientation="Horizontal"
                                        Spacing="8">
                                        <SymbolIcon core:Properties.RenderScale="0.6" Symbol="Edit" />
                                        <TextBlock
                                            x:Uid="EditSuggestionsLabel"
                                            VerticalAlignment="Center"
                                            FontWeight="SemiBold"
                                            TextLineBounds="Tight" />
                                    </StackPanel>
                                </controls:ExtendedListViewItem>
                            </core:Properties.Footer>
                        </AutoSuggestBox>

                        <Button
                            x:Name="SuggestionButton"
                            x:Uid="ShowSuggestionsButton"
                            Grid.Column="1"
                            Height="{TemplateBinding Height}"
                            VerticalAlignment="Stretch"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            CornerRadius="0"
                            Style="{StaticResource SmolButton}">
                            <FontIcon
                                FontSize="12"
                                Glyph="{core:ThemeIconGlyph Icon=ChevronDown}"
                                Style="{StaticResource ThemeFontIconStyle}" />
                        </Button>

                        <controls:CharacterPickerButton
                            x:Name="PickerButton"
                            x:Load="False"
                            Grid.Column="2"
                            Height="{TemplateBinding Height}"
                            Background="Transparent"
                            BorderThickness="0"
                            CornerRadius="0"
                            Options="{TemplateBinding RenderingOptions}"
                            Placement="BottomEdgeAlignedRight"
                            Target="{Binding ElementName=SuggestionBox}"
                            Visibility="Collapsed" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Root.BorderBrush" Value="{ThemeResource TextControlBorderBrushPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="NotFocused" />
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="Root.BorderBrush" Value="{ThemeResource TextControlBorderBrushFocused}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PickerStates">
                                <VisualState x:Name="PickerHiddenState" />
                                <VisualState x:Name="PickerVisibleState">
                                    <VisualState.Setters>
                                        <Setter Target="PickerButton.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:CharacterPicker">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Width" Value="310" />
        <Setter Property="Height" Value="400" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:CharacterPicker">
                    <Grid
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <controls:CharacterGridView
                            x:Name="ItemsGridView"
                            Margin="0"
                            Padding="0 12 0 24"
                            IsItemClickEnabled="False"
                            ItemAnnotation="None"
                            ItemContainerStyle="{StaticResource DefaultThemeGridViewItemStyle}"
                            ItemContainerTransitions="{StaticResource NoTransitions}"
                            ItemFontFace="{Binding Options.Variant.Face, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            ItemFontFamily="{Binding Options.Variant.Source, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            ItemFontVariant="{Binding Options.Variant, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            ItemSize="40"
                            ItemTypography="{Binding Options.DXTypography, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            ItemsSource="{Binding Options.Variant.Characters, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            SelectionMode="Single"
                            ShowColorGlyphs="{Binding Options.IsColourFontEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <GridView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <ItemsWrapGrid HorizontalAlignment="Center" Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </GridView.ItemsPanel>
                            <GridView.ItemTemplate>
                                <DataTemplate>
                                    <!--  For performance reasons, all bindings are done in C#  -->
                                    <Grid Name="TemplateContent" Padding="4">
                                        <TextBlock
                                            x:Name="Text"
                                            Margin="0 -2 0 0"
                                            Padding="0,0,0,8"
                                            IsTextScaleFactorEnabled="False"
                                            TextAlignment="Center" />
                                    </Grid>
                                </DataTemplate>
                            </GridView.ItemTemplate>
                        </controls:CharacterGridView>

                        <Grid
                            x:Name="BottomBar"
                            Grid.Row="3"
                            ColumnSpacing="8"
                            Padding="8">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <Button
                                x:Name="AddButton"
                                HorizontalAlignment="Stretch"
                                h:FluentAnimation.PointerOver="ContentPresenter.Content"
                                h:FluentAnimation.PointerOverOffset="-2"
                                h:FluentAnimation.Pressed="ContentPresenter"
                                Content="{core:Localizer Key='AddButton/Label'}"
                                Style="{StaticResource AccentButtonStyle}" />
                            <Button
                                x:Name="CloseButton"
                                x:Uid="BtnTextClose"
                                Grid.Column="1"
                                HorizontalAlignment="Stretch"
                                Style="{StaticResource DefaultThemeButtonStyle}" />
                        </Grid>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:InfoBar">
        <Setter Property="Background" Value="{ThemeResource InfoBarBackgroundBrush}" />
        <Setter Property="CornerRadius" Value="{StaticResource InfoBarCornerRadius}" />
        <Setter Property="Padding" Value="8 4 8 6" />
        <Setter Property="Margin" Value="6 12 0 0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:InfoBar">
                    <Border
                        Margin="{TemplateBinding Margin}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid ColumnSpacing="8" Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <FontIcon
                                FontSize="13.333"
                                Glyph="{core:ThemeIconGlyph Icon=FontInfo}"
                                Style="{StaticResource ThemeFontIconStyle}" />

                            <ContentPresenter
                                Grid.Column="1"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                                TextLineBounds="Full"
                                TextWrapping="Wrap" />

                            <ContentPresenter Grid.Column="2" Content="{TemplateBinding SecondaryContent}" />
                        </Grid>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:GlyphNamingControl">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:GlyphNamingControl">
                    <StackPanel
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBlock x:Uid="GlyphNameToggleHeader" Style="{StaticResource HeaderStyle}" />

                        <Grid ColumnSpacing="8">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox IsSpellCheckEnabled="False" Text="{Binding ViewModel.Template, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Button
                                x:Name="ResetButton"
                                x:Uid="BtnReset"
                                Grid.Column="1" />
                        </Grid>

                        <!--<TextBlock
                            Margin="0 4 0 0"
                            FontStyle="Italic"
                            Opacity="0.7"
                            Text="Preview" />-->
                        <TextBlock
                            Margin="0 2 0 0"
                            FontSize="12.666"
                            FontStyle="Normal"
                            Opacity="0.7"
                            Text="{Binding ViewModel.Example, RelativeSource={RelativeSource Mode=TemplatedParent}}" />

                        <Button
                            x:Name="ToggleButton"
                            Margin="-4 12 -4 8"
                            Padding="4 0"
                            Style="{StaticResource ThemeTextBlockButtonStyle}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock x:Uid="GlyphNameToggleLabel" OpticalMarginAlignment="TrimSideBearings" />
                                <FontIcon
                                    x:Name="Chevron"
                                    Margin="4 2 0 0"
                                    VerticalAlignment="Center"
                                    core:Properties.RotationTransition="0:0:0.2"
                                    FontSize="12"
                                    Glyph="{core:ThemeIconGlyph Icon=ChevronDown}"
                                    IsTextScaleFactorEnabled="False"
                                    Style="{StaticResource ThemeFontIconStyle}" />
                            </StackPanel>
                        </Button>

                        <Grid x:Name="ToggleRoot" Visibility="Collapsed">
                            <ItemsControl x:Name="ItemsRoot" FontSize="13">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="100" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <TextBlock
                                                FontFamily="Consolas"
                                                IsTextScaleFactorEnabled="False"
                                                IsTextSelectionEnabled="True"
                                                Text="{Binding Match}"
                                                TextWrapping="Wrap" />

                                            <TextBlock
                                                Grid.Column="1"
                                                Foreground="{StaticResource TextControlPlaceholderForeground}"
                                                Text="{Binding}"
                                                TextWrapping="Wrap" />
                                        </Grid>

                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="NonExpandedState" />
                                <VisualState x:Name="ExpandedState">
                                    <VisualState.StateTriggers>
                                        <StateTrigger IsActive="{Binding ViewModel.IsExpanded, RelativeSource={RelativeSource Mode=TemplatedParent}, FallbackValue=False, TargetNullValue=False}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="Chevron.(core:Properties.Rotation)" Value="180" />
                                        <Setter Target="ToggleRoot.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:PreviewTip">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Width" Value="350" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="MaxWidth" Value="400" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="Background" Value="{ThemeResource ToolTipBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource ToolTipBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource ToolTipBorderThemeThickness}" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:PreviewTip">
                    <Border
                        x:Name="LayoutRoot"
                        Margin="{TemplateBinding Margin}"
                        Padding="{TemplateBinding Padding}"
                        core:Properties.Depth="30"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        Visibility="Collapsed">
                        <Border.Shadow>
                            <ThemeShadow core:Properties.Receiver="{Binding (core:Properties.Receiver), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Border.Shadow>
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ExtListViewCtrlTemplate" TargetType="controls:ExtendedListView">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}">
            <ScrollViewer
                x:Name="ScrollViewer"
                controls:ExtendedListView.SelectorVisual="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(controls:ExtendedListView.SelectorVisual)}"
                AutomationProperties.AccessibilityView="Raw"
                BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                Style="{StaticResource ExtScroller}"
                TabNavigation="{TemplateBinding TabNavigation}"
                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                <ItemsPresenter
                    Padding="{TemplateBinding Padding}"
                    Footer="{TemplateBinding Footer}"
                    FooterTemplate="{TemplateBinding FooterTemplate}"
                    FooterTransitions="{TemplateBinding FooterTransitions}"
                    Header="{TemplateBinding Header}"
                    HeaderTemplate="{TemplateBinding HeaderTemplate}"
                    HeaderTransitions="{TemplateBinding HeaderTransitions}" />
            </ScrollViewer>
        </Border>

    </ControlTemplate>

    <Style TargetType="controls:ExtendedListView">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="TabNavigation" Value="Once" />
        <Setter Property="IsSwipeEnabled" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
        <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
        <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True" />
        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
        <Setter Property="Template" Value="{StaticResource ExtListViewCtrlTemplate}" />
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="ItemContainerTransitions">
            <Setter.Value>
                <TransitionCollection />
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <ItemsStackPanel CacheLength="0" Orientation="Vertical" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:ExtendedGridView">
        <Setter Property="Padding" Value="0,0,0,10" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="TabNavigation" Value="Once" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
        <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
        <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True" />
        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
        <Setter Property="IsSwipeEnabled" Value="True" />
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualMargin" Value="-2" />
        <Setter Property="Template" Value="{StaticResource ExtListViewCtrlTemplate}" />
        <Setter Property="ItemContainerTransitions">
            <Setter.Value>
                <TransitionCollection />
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <ItemsWrapGrid Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="ExtScroller" TargetType="ScrollViewer">
        <Setter Property="HorizontalScrollMode" Value="Auto" />
        <Setter Property="VerticalScrollMode" Value="Auto" />
        <Setter Property="IsHorizontalRailEnabled" Value="True" />
        <Setter Property="IsVerticalRailEnabled" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ZoomMode" Value="Disabled" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border
                        x:Name="Root"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ScrollingIndicatorStates">

                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseIndicator" To="NoIndicator">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                <DiscreteObjectKeyFrame KeyTime="{ThemeResource ScrollViewerSeparatorContractDelay}">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                <DiscreteObjectKeyFrame KeyTime="{ThemeResource ScrollViewerSeparatorContractDelay}">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="MouseIndicatorFull" To="NoIndicator">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                <DiscreteObjectKeyFrame KeyTime="{ThemeResource ScrollViewerSeparatorContractDelay}">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                <DiscreteObjectKeyFrame KeyTime="{ThemeResource ScrollViewerSeparatorContractDelay}">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="MouseIndicatorFull" To="MouseIndicator">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                <DiscreteObjectKeyFrame KeyTime="{ThemeResource ScrollViewerSeparatorContractDelay}">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                <DiscreteObjectKeyFrame KeyTime="{ThemeResource ScrollViewerSeparatorContractDelay}">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="TouchIndicator" To="NoIndicator">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NoIndicator" />
                                <VisualState x:Name="TouchIndicator">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <ScrollingIndicatorMode>TouchIndicator</ScrollingIndicatorMode>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <ScrollingIndicatorMode>TouchIndicator</ScrollingIndicatorMode>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseIndicator">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseIndicatorFull">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ScrollBarSeparatorStates">

                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="ScrollBarSeparatorExpanded" To="ScrollBarSeparatorCollapsed">

                                        <Storyboard>
                                            <DoubleAnimation
                                                BeginTime="{ThemeResource ScrollViewerSeparatorContractBeginTime}"
                                                Storyboard.TargetName="ScrollBarSeparator"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0"
                                                Duration="{ThemeResource ScrollViewerSeparatorContractDuration}" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="ScrollBarSeparatorCollapsed" />
                                <VisualState x:Name="ScrollBarSeparatorExpanded">

                                    <Storyboard>
                                        <DoubleAnimation
                                            BeginTime="{ThemeResource ScrollViewerSeparatorExpandBeginTime}"
                                            Storyboard.TargetName="ScrollBarSeparator"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="{ThemeResource ScrollViewerSeparatorExpandDuration}" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ScrollBarSeparatorExpandedWithoutAnimation">

                                    <Storyboard>
                                        <DoubleAnimation
                                            BeginTime="{ThemeResource ScrollViewerSeparatorExpandBeginTime}"
                                            Storyboard.TargetName="ScrollBarSeparator"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ScrollBarSeparatorCollapsedWithoutAnimation">

                                    <Storyboard>
                                        <DoubleAnimation
                                            BeginTime="{ThemeResource ScrollViewerSeparatorContractBeginTime}"
                                            Storyboard.TargetName="ScrollBarSeparator"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectorStateGroup">
                                <VisualState x:Name="NoSelectorState" />
                                <VisualState x:Name="SelectorState">
                                    <VisualState.StateTriggers>
                                        <StateTrigger IsActive="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(controls:ExtendedListView.SelectorVisual), Converter={StaticResource NullConverter}, ConverterParameter='Inverse'}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="SelectorPresenter.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Background="{TemplateBinding Background}">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter
                                x:Name="ScrollContentPresenter"
                                Grid.RowSpan="2"
                                Grid.ColumnSpan="2"
                                Margin="{TemplateBinding Padding}"
                                ContentTemplate="{TemplateBinding ContentTemplate}" />

                            <ContentPresenter
                                x:Name="SelectorPresenter"
                                x:Load="False"
                                Grid.RowSpan="2"
                                Grid.ColumnSpan="2"
                                Margin="{TemplateBinding Padding}"
                                Canvas.ZIndex="-1"
                                Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(controls:ExtendedListView.SelectorVisual)}"
                                Visibility="Collapsed" />

                            <Grid Grid.RowSpan="2" Grid.ColumnSpan="2" />
                            <ScrollBar
                                x:Name="VerticalScrollBar"
                                Grid.Column="1"
                                HorizontalAlignment="Right"
                                IsTabStop="False"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                Orientation="Vertical"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                Value="{TemplateBinding VerticalOffset}" />
                            <ScrollBar
                                x:Name="HorizontalScrollBar"
                                Grid.Row="1"
                                IsTabStop="False"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                Orientation="Horizontal"
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                Value="{TemplateBinding HorizontalOffset}" />
                            <Border
                                x:Name="ScrollBarSeparator"
                                Grid.Row="1"
                                Grid.Column="1"
                                Background="{ThemeResource ScrollViewerScrollBarSeparatorBackground}"
                                Opacity="0" />

                        </Grid>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
